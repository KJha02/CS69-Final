#!/usr/bin/env python

# AUTHOR: Anna Mikhailova
# CLASS: Multi-Robot Systems, 22F, Final Project

# --------------------------------------------------------------------------------------------------------------------------------------------------
# import of relevant python modules and libraries
import rospy
import roslib
import tf
from geometry_msgs.msg import PoseWithCovarianceStamped

roslib.load_manifest("turtlebot3_final")

# topic constants
POSE_TOPIC = '/%s/pose'
FREQUENCY = 100  # Hz

# --------------------------------------------------------------------------------------------------------------------------------------------------


def _tf_callback(msg, bot_name):
    br = tf.TransformBroadcaster()
    rate = rospy.Rate(FREQUENCY)
    rospy.logerr("running")
    while not rospy.is_shutdown():
        br.sendTransform((msg.pose.pose.position.x, msg.pose.pose.position.y, 0), (msg.pose.pose.orientation.x, msg.pose.pose.orientation.y,
                         msg.pose.pose.orientation.z, msg.pose.pose.orientation.w), rospy.Time.now(),  bot_name + "/odom", "world")
        rate.sleep()


if __name__ == "__main__":
    rospy.init_node("broadcaster")
    bot_name = rospy.get_param("~bot_name")
    rospy.Subscriber(POSE_TOPIC % bot_name, PoseWithCovarianceStamped,_tf_callback, bot_name, queue_size=1)
    rospy.spin()
