#!/usr/bin/env python
import roslib
roslib.load_manifest('auction')
import rospy
import tf
import tf2_ros
from geometry_msgs.msg import PoseWithCovarianceStamped

FREQUENCY = 10

# tf broadcaster for broadcaster each turtlebot's pose
def handle_turtle_pose(msg, turtlename):
    print("making broadcaster")
    br = tf.TransformBroadcaster()
    print("sending transform")
    rate = rospy.Rate(FREQUENCY)
    while not rospy.is_shutdown():
        br.sendTransform((msg.pose.pose.position.x, msg.pose.pose.position.y, 0),
            (msg.pose.pose.orientation.x, msg.pose.pose.orientation.y, msg.pose.pose.orientation.z, msg.pose.pose.orientation.w),
            rospy.Time.now(),
            turtlename + "/odom",
            "world")

if __name__ == '__main__':
    print("initializing broadcaster")
    rospy.init_node('robot_tf_broadcaster')
    turtlename = rospy.get_param('~turtle')
    print(turtlename)
    print("making broadcaster")

    rospy.Subscriber('/%s/initialpose' % turtlename,
                     PoseWithCovarianceStamped,
                     handle_turtle_pose,
                     turtlename, queue_size=1)
    rospy.spin()
